<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.car.*,person.*">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:annotation-config/>
    <!-- 配置事物管理器，在*ServiceImpl里写@Transactional就可以启用事物管理 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="minIdle" value="${jdbc.miniPoolSize}"/>
        <property name="maxActive" value="${jdbc.maxPoolSize}"/>
        <property name="initialSize" value="${jdbc.initialPoolSize}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.maxIdleTime}"/>
        <!-- <property name="acquireIncrement" value="${jdbc.acquireIncrement}" />  -->
        <property name="connectionErrorRetryAttempts" value="${jdbc.acquireRetryAttempts}"/>
        <!--<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}" />-->
        <property name="testOnReturn" value="${jdbc.testConnectionOnCheckin}"/>
        <!-- <property name="automaticTestTable" value="${jdbc.automaticTestTable}"/> -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.idleConnectionTestPeriod}"/>
        <!-- <property name="checkoutTimeout" value="${jdbc.checkoutTimeout}" /> -->
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="namingStrategy">
            <bean class="org.hibernate.cfg.ImprovedNamingStrategy"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <!-- org.hibernate.dialect.Oracle10gDialect -->
                <!-- org.hibernate.dialect.MySQL5Dialect -->
                <!-- org.hibernate.dialect.HSQLDialect
                 -->
                <prop key="hibernate.connection.release_mode">after_transaction</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
                <!-- 0,1,2,3 -->
                <prop key="hibernate.max_fetch_depth">${hibernate.max_fetch_depth}</prop>
                <!-- validate create update -->
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <!--
                <prop key="hibernate.jdbc.fetch_size">${hibernate.jdbc.fetch_size}</prop>
                <prop key="hibernate.jdbc.batch_size">${hibernate.jdbc.batch_size}</prop>
                 -->
            </props>
        </property>
        <property name="packagesToScan">
            <list>
                <value>person.db.entity</value>
            </list>
        </property>
    </bean>
    <!-- JDBC配置 -->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
    </bean>

    <!-- JDBC配置 -->
    <bean id="namedParameterJdbcTemplate" class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
        <constructor-arg ref="dataSource"/>
    </bean>
</beans>